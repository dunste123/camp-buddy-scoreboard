{"version":3,"sources":["components/ForkRibbon.js","BuddyStore.js","components/BuddyButton.js","components/BuddyComponent.js","App.js","serviceWorker.js","index.js"],"names":["ForkRibbon","imgStyle","position","top","right","border","zIndex","href","rel","target","style","this","src","alt","Component","BuddyStore","name","emoteId","score","_checkKeitaro","_setIndexes","_loadScores","getScore","setScore","index","toLowerCase","Error","_saveScores","localStorage","removeItem","getItem","unshift","i","length","buddy","storedBuddies","buddies","JSON","parse","Object","keys","console","log","hasOwnProperty","mapped","forEach","json","stringify","setItem","BuddyButton","props","text","click","marginCls","noMargin","className","onClick","BuddyComponent","incrementScore","decrementScore","imgSrc","crossOrigin","App","_incrementScore","_store","setState","_decrementScore","_resetScores","window","confirm","resetScores","location","reload","map","key","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.02f93c44.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nexport default class ForkRibbon extends Component {\n\n    imgStyle = {\n        position: \"fixed\",\n        top: \"-14px\",\n        right: \"-14px\",\n        border: \"0\",\n        zIndex: \"100\",\n    };\n\n    render () {\n        return (<div>\n            <a href=\"https://github.com/dunste123/camp-buddy-scoreboard\" rel=\"noopener noreferrer\" target=\"_blank\">\n                <img\n                    style={this.imgStyle}\n                    src=\"https://github.blog/wp-content/uploads/2008/12/forkme_right_darkblue_121621.png?resize=149%2C149\"\n                    alt=\"Fork me on GitHub\"/>\n            </a>\n        </div>);\n    }\n}\n","export default class BuddyStore {\n    #indexes = {};\n\n    /**\n     *\n     * @type Buddy[]\n     */\n    #buddies = [\n        // He should be added tbh\n        /*{\n            name: 'Keitaro',\n            emoteId: '514293667041771531',\n            score: 0,\n        },*/\n\n        {\n            name: \"Hiro\",\n            emoteId: \"514293666853158913\",\n            score: 0,\n        },\n\n        {\n            name: \"Natsumi\",\n            emoteId: \"514293667192766465\",\n            score: 0,\n        },\n\n        {\n            name: \"Hunter\",\n            emoteId: \"514294078570102784\",\n            score: 0,\n        },\n\n        {\n            name: \"Yoichi\",\n            emoteId: \"514293667595419663\",\n            score: 0,\n        },\n\n        {\n            name: \"Taiga\",\n            emoteId: \"514293667507208193\",\n            score: 0,\n        },\n    ];\n\n    constructor (): void {\n        this._checkKeitaro();\n        this._setIndexes();\n        this._loadScores();\n    }\n\n    get buddies () {\n        return this.#buddies;\n    }\n\n    incrementScore (name: string): void {\n        const score = this.getScore(name);\n\n        this.setScore(name, score + 1);\n    }\n\n    decrementScore (name: string): void {\n        const score = this.getScore(name);\n\n        this.setScore(name, score - 1);\n    }\n\n    getScore (name: string): number {\n        const index = this.#indexes[name.toLowerCase()];\n\n        if (typeof index === \"undefined\") {\n            throw new Error(`Missing buddy: ${name}`);\n        }\n\n        return this.#buddies[index].score;\n    }\n\n    setScore (name: string, score: number): void {\n        const index = this.#indexes[name.toLowerCase()];\n\n        if (typeof index === \"undefined\") {\n            return;\n            // throw new Error(`Missing buddy: ${name}`);\n        }\n\n        this.#buddies[index].score = score;\n\n        this._saveScores();\n    }\n\n    resetScores (): void {\n        localStorage.removeItem(\"buddies\");\n    }\n\n    _checkKeitaro (): void {\n        if (localStorage.getItem(\"keitaro\") === \"true\") {\n            this.#buddies.unshift({\n                name: \"Keitaro\",\n                emoteId: \"514293667041771531\",\n                score: 0,\n            });\n        }\n    }\n\n    _setIndexes (): void {\n        for (let i = 0; i < this.#buddies.length; i++) {\n            const buddy = this.#buddies[i];\n\n            this.#indexes[buddy.name.toLowerCase()] = i;\n        }\n    }\n\n    _loadScores (): void {\n        const storedBuddies = localStorage.getItem(\"buddies\");\n\n        if (storedBuddies) {\n            const buddies = JSON.parse(storedBuddies);\n            const keys = Object.keys(buddies);\n\n            for (const name of keys) {\n                console.log(name);\n\n                if (!buddies.hasOwnProperty(name)) {\n                    continue;\n                }\n\n                this.setScore(name, buddies[name]);\n            }\n        }\n    }\n\n    _saveScores (): void {\n        const mapped = {};\n\n        this.#buddies.forEach((buddy) => {\n            mapped[buddy.name.toLowerCase()] = buddy.score;\n        });\n\n        const json = JSON.stringify(mapped);\n\n        localStorage.setItem(\"buddies\", json);\n    }\n\n}\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"../assets/style/BuddyButton.scoped.scss\";\n\nexport default class BuddyButton extends Component {\n\n    render () {\n        const { text, click, noMargin } = this.props;\n        const marginCls = noMargin ? \"no-margin\" : \"\";\n\n        return (\n            <button className={marginCls} onClick={click}>{text}</button>\n        );\n    }\n}\n\nBuddyButton.propTypes = {\n    text: PropTypes.string.isRequired,\n    click: PropTypes.func.isRequired,\n    noMargin: PropTypes.bool,\n};\n","import React, { Component } from \"react\";\nimport type { Buddy } from \"../types/Buddy\";\nimport PropTypes from \"prop-types\";\nimport BuddyButton from \"./BuddyButton\";\nimport \"../assets/style/BuddyComponent.scoped.scss\";\n\nexport default class BuddyComponent extends Component {\n    render () {\n        const { incrementScore, decrementScore } = this.props;\n\n        const buddy: Buddy = this.props.buddy;\n        const { name, emoteId, score } = buddy;\n        const imgSrc = `https://cdn.discordapp.com/emojis/${emoteId}.png?v=1`;\n\n        return (<div className=\"buddy\">\n            <img src={imgSrc} alt={name} crossOrigin=\"anonymous\"/>\n            <h1>{name}</h1>\n            <h2>Score: {score}</h2>\n            <div className=\"buttons\">\n                <BuddyButton text=\"+\" click={incrementScore}/>\n                <BuddyButton text=\"-\" click={decrementScore}/>\n            </div>\n        </div>);\n    }\n}\n\nBuddyComponent.propTypes = {\n    // buddy: PropTypes.objectOf(BuddyObjectType).isRequired,\n    incrementScore: PropTypes.func.isRequired,\n    decrementScore: PropTypes.func.isRequired,\n};\n","import React, { Component } from \"react\";\nimport ForkRibbon from \"./components/ForkRibbon\";\nimport BuddyStore from \"./BuddyStore\";\nimport BuddyComponent from \"./components/BuddyComponent\";\nimport BuddyButton from \"./components/BuddyButton\";\nimport \"./assets/style/App.scoped.scss\";\n\nexport default class App extends Component {\n    _store;\n\n    constructor (props) {\n        super(props);\n        this._store = new BuddyStore();\n\n        window.buddies = this._store.buddies;\n    }\n\n    _incrementScore = (buddy: string) => {\n        this._store.incrementScore(buddy);\n        this.setState({});\n    };\n\n    _decrementScore = (buddy: string) => {\n        this._store.decrementScore(buddy);\n        this.setState({});\n    };\n\n    _resetScores = () => {\n        const conf = window.confirm(\"Hold up buddy\\nThis will reset all your scores, are you sure?\");\n\n        if (conf) {\n            this._store.resetScores();\n            window.location.reload();\n        }\n    };\n\n    render () {\n        const buddies = this._store.buddies;\n\n        return (\n            <div className=\"container\">\n                <ForkRibbon/>\n\n                <div className=\"buddies\">\n                    {buddies.map((buddy) =>\n                        <BuddyComponent\n                            buddy={buddy}\n                            key={buddy.emoteId}\n                            className=\"buddy\"\n                            incrementScore={() => this._incrementScore(buddy.name)}\n                            decrementScore={() => this._decrementScore(buddy.name)}/>)}\n                </div>\n\n                <div className=\"reset\">\n                    <BuddyButton noMargin={true} text=\"Reset\" click={this._resetScores}/>\n                </div>\n            </div>\n        );\n    }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register (config) {\n    if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener(\"load\", () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        \"This web app is being served cache-first by a service \" +\n                        \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW (swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === \"installed\") {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                \"New content is available and will be used when all \" +\n                                \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log(\"Content is cached for offline use.\");\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error(\"Error during service worker registration:\", error);\n        });\n}\n\nfunction checkValidServiceWorker (swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: { \"Service-Worker\": \"script\" }\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get(\"content-type\");\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf(\"javascript\") === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                \"No internet connection found. App is running in offline mode.\"\n            );\n        });\n}\n\nexport function unregister () {\n    if (\"serviceWorker\" in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister();\n            })\n            .catch(error => {\n                console.error(error.message);\n            });\n    }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App/>, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
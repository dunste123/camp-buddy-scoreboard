{"version":3,"sources":["components/ForkRibbon.js","BuddyStore.js","components/BuddyButton.js","components/BuddyComponent.js","App.js","index.js"],"names":["ForkRibbon","imgStyle","position","top","right","border","zIndex","href","rel","target","style","this","src","alt","Component","BuddyStore","name","emoteId","score","_checkKeitaro","_setIndexes","_loadScores","getScore","setScore","index","toLowerCase","Error","_saveScores","localStorage","removeItem","getItem","unshift","i","length","buddy","storedBuddies","buddies","JSON","parse","Object","keys","console","log","hasOwnProperty","mapped","forEach","json","stringify","setItem","BuddyButton","props","text","click","onClick","BuddyComponent","incrementScore","decrementScore","imgSrc","className","crossOrigin","App","_incrementScore","_store","setState","_decrementScore","_resetScores","window","confirm","resetScores","location","reload","map","key","ReactDOM","render","document","getElementById"],"mappings":"qTAEqBA,E,2MAEjBC,SAAW,CACPC,SAAU,QACVC,IAAK,QACLC,MAAO,QACPC,OAAQ,IACRC,OAAQ,O,wEAIR,OAAQ,6BACJ,uBAAGC,KAAK,qDAAqDC,IAAI,sBAAsBC,OAAO,UAC1F,yBACIC,MAAOC,KAAKV,SACZW,IAAI,mGACJC,IAAI,4B,GAhBgBC,a,cCFnBC,E,WA8CjB,aAAsB,oEA7CX,KA6CU,gDAvCV,CAQP,CACIC,KAAM,OACNC,QAAS,qBACTC,MAAO,GAGX,CACIF,KAAM,UACNC,QAAS,qBACTC,MAAO,GAGX,CACIF,KAAM,SACNC,QAAS,qBACTC,MAAO,GAGX,CACIF,KAAM,SACNC,QAAS,qBACTC,MAAO,GAGX,CACIF,KAAM,QACNC,QAAS,qBACTC,MAAO,MAKXP,KAAKQ,gBACLR,KAAKS,cACLT,KAAKU,c,2DAOOL,GACZ,IAAME,EAAQP,KAAKW,SAASN,GAE5BL,KAAKY,SAASP,EAAME,EAAQ,K,qCAGhBF,GACZ,IAAME,EAAQP,KAAKW,SAASN,GAE5BL,KAAKY,SAASP,EAAME,EAAQ,K,+BAGtBF,GACN,IAAMQ,EAAQ,YAAAb,KAAA,MAAcK,EAAKS,eAEjC,GAAqB,qBAAVD,EACP,MAAM,IAAIE,MAAJ,yBAA4BV,IAGtC,OAAO,YAAAL,KAAA,MAAca,GAAON,Q,+BAGtBF,EAAcE,GACpB,IAAMM,EAAQ,YAAAb,KAAA,MAAcK,EAAKS,eAEZ,qBAAVD,IAKX,YAAAb,KAAA,MAAca,GAAON,MAAQA,EAE7BP,KAAKgB,iB,oCAILC,aAAaC,WAAW,a,sCAIgB,SAApCD,aAAaE,QAAQ,YACrB,YAAAnB,KAAA,MAAcoB,QAAQ,CAClBf,KAAM,UACNC,QAAS,qBACTC,MAAO,M,oCAMf,IAAK,IAAIc,EAAI,EAAGA,EAAI,YAAArB,KAAA,MAAcsB,OAAQD,IAAK,CAC3C,IAAME,EAAQ,YAAAvB,KAAA,MAAcqB,GAE5B,YAAArB,KAAA,MAAcuB,EAAMlB,KAAKS,eAAiBO,K,oCAK9C,IAAMG,EAAgBP,aAAaE,QAAQ,WAE3C,GAAIK,EAIA,IAHA,IAAMC,EAAUC,KAAKC,MAAMH,GAG3B,MAFaI,OAAOC,KAAKJ,GAEzB,eAAyB,CAApB,IAAMpB,EAAI,KACXyB,QAAQC,IAAI1B,GAEPoB,EAAQO,eAAe3B,IAI5BL,KAAKY,SAASP,EAAMoB,EAAQpB,O,oCAMpC,IAAM4B,EAAS,GAEf,YAAAjC,KAAA,MAAckC,SAAQ,SAACX,GACnBU,EAAOV,EAAMlB,KAAKS,eAAiBS,EAAMhB,SAG7C,IAAM4B,EAAOT,KAAKU,UAAUH,GAE5BhB,aAAaoB,QAAQ,UAAWF,K,8BAxFhC,OAAO,YAAAnC,KAAP,U,uDCjDasC,G,uLAEN,IAAD,EACkBtC,KAAKuC,MAArBC,EADF,EACEA,KAAMC,EADR,EACQA,MAEd,OACI,4BAAQC,QAASD,EAAjB,sBAAyBD,O,GANIrC,cCEpBwC,G,uLACN,IAAD,EACqC3C,KAAKuC,MAAxCK,EADF,EACEA,eAAgBC,EADlB,EACkBA,eAElBtB,EAAevB,KAAKuC,MAAMhB,MACxBlB,EAAyBkB,EAAzBlB,KAAMC,EAAmBiB,EAAnBjB,QAASC,EAAUgB,EAAVhB,MACjBuC,EAAM,4CAAwCxC,EAAxC,YAEZ,OAAQ,yBAAKyC,UAAU,QAAf,sBACJ,yBAAK9C,IAAK6C,EAAQ5C,IAAKG,EAAM2C,YAAY,YAAzC,uBACA,8CAAK3C,GACL,wDAAYE,GACZ,yBAAKwC,UAAU,UAAf,sBACI,kBAAC,EAAD,CAAaP,KAAK,IAAIC,MAAOG,EAA7B,uBACA,kBAAC,EAAD,CAAaJ,KAAK,IAAIC,MAAOI,EAA7B,6B,GAd4B1C,cCCvB8C,G,kBAGjB,WAAaV,GAAQ,IAAD,8BAChB,4CAAMA,KAIVW,gBAAkB,SAAC3B,GACf,EAAK4B,OAAOP,eAAerB,GAC3B,EAAK6B,SAAS,KAPE,EAUpBC,gBAAkB,SAAC9B,GACf,EAAK4B,OAAON,eAAetB,GAC3B,EAAK6B,SAAS,KAZE,EAepBE,aAAe,WACEC,OAAOC,QAAQ,mEAGxB,EAAKL,OAAOM,cACZF,OAAOG,SAASC,WAlBpB,EAAKR,OAAS,IAAI/C,EAFF,E,sEAwBT,IAAD,OACAqB,EAAUzB,KAAKmD,OAAO1B,QAE5B,OACI,yBAAKsB,UAAU,YAAf,sBACI,kBAAC,EAAD,wBAEA,yBAAKA,UAAU,UAAf,sBACKtB,EAAQmC,KAAI,SAACrC,GAAD,OACT,kBAAC,EAAD,CACIA,MAAOA,EACPsC,IAAKtC,EAAMjB,QACXyC,UAAU,QACVH,eAAgB,kBAAM,EAAKM,gBAAgB3B,EAAMlB,OACjDwC,eAAgB,kBAAM,EAAKQ,gBAAgB9B,EAAMlB,OALrD,2BAQR,yBAAK0C,UAAU,QAAf,sBACI,kBAAC,EAAD,CAAaP,KAAK,QAAQC,MAAOzC,KAAKsD,aAAtC,6B,GA7CanD,cCFjC2D,IAASC,OAAO,kBAAC,EAAD,MAAQC,SAASC,eAAe,U","file":"static/js/main.825c05b2.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nexport default class ForkRibbon extends Component {\n\n    imgStyle = {\n        position: \"fixed\",\n        top: \"-14px\",\n        right: \"-14px\",\n        border: \"0\",\n        zIndex: \"100\",\n    };\n\n    render () {\n        return (<div>\n            <a href=\"https://github.com/dunste123/camp-buddy-scoreboard\" rel=\"noopener noreferrer\" target=\"_blank\">\n                <img\n                    style={this.imgStyle}\n                    src=\"https://github.blog/wp-content/uploads/2008/12/forkme_right_darkblue_121621.png?resize=149%2C149\"\n                    alt=\"Fork me on GitHub\"/>\n            </a>\n        </div>);\n    }\n}\n","export default class BuddyStore {\n    #indexes = {};\n\n    /**\n     *\n     * @type Buddy[]\n     */\n    #buddies = [\n        // He should be added tbh\n        /*{\n            name: 'Keitaro',\n            emoteId: '514293667041771531',\n            score: 0,\n        },*/\n\n        {\n            name: \"Hiro\",\n            emoteId: \"514293666853158913\",\n            score: 0,\n        },\n\n        {\n            name: \"Natsumi\",\n            emoteId: \"514293667192766465\",\n            score: 0,\n        },\n\n        {\n            name: \"Hunter\",\n            emoteId: \"514294078570102784\",\n            score: 0,\n        },\n\n        {\n            name: \"Yoichi\",\n            emoteId: \"514293667595419663\",\n            score: 0,\n        },\n\n        {\n            name: \"Taiga\",\n            emoteId: \"514293667507208193\",\n            score: 0,\n        },\n    ];\n\n    constructor (): void {\n        this._checkKeitaro();\n        this._setIndexes();\n        this._loadScores();\n    }\n\n    get buddies () {\n        return this.#buddies;\n    }\n\n    incrementScore (name: string): void {\n        const score = this.getScore(name);\n\n        this.setScore(name, score + 1);\n    }\n\n    decrementScore (name: string): void {\n        const score = this.getScore(name);\n\n        this.setScore(name, score - 1);\n    }\n\n    getScore (name: string): number {\n        const index = this.#indexes[name.toLowerCase()];\n\n        if (typeof index === \"undefined\") {\n            throw new Error(`Missing buddy: ${name}`);\n        }\n\n        return this.#buddies[index].score;\n    }\n\n    setScore (name: string, score: number): void {\n        const index = this.#indexes[name.toLowerCase()];\n\n        if (typeof index === \"undefined\") {\n            return;\n            // throw new Error(`Missing buddy: ${name}`);\n        }\n\n        this.#buddies[index].score = score;\n\n        this._saveScores();\n    }\n\n    resetScores (): void {\n        localStorage.removeItem(\"buddies\");\n    }\n\n    _checkKeitaro (): void {\n        if (localStorage.getItem(\"keitaro\") === \"true\") {\n            this.#buddies.unshift({\n                name: \"Keitaro\",\n                emoteId: \"514293667041771531\",\n                score: 0,\n            });\n        }\n    }\n\n    _setIndexes (): void {\n        for (let i = 0; i < this.#buddies.length; i++) {\n            const buddy = this.#buddies[i];\n\n            this.#indexes[buddy.name.toLowerCase()] = i;\n        }\n    }\n\n    _loadScores (): void {\n        const storedBuddies = localStorage.getItem(\"buddies\");\n\n        if (storedBuddies) {\n            const buddies = JSON.parse(storedBuddies);\n            const keys = Object.keys(buddies);\n\n            for (const name of keys) {\n                console.log(name);\n\n                if (!buddies.hasOwnProperty(name)) {\n                    continue;\n                }\n\n                this.setScore(name, buddies[name]);\n            }\n        }\n    }\n\n    _saveScores (): void {\n        const mapped = {};\n\n        this.#buddies.forEach((buddy) => {\n            mapped[buddy.name.toLowerCase()] = buddy.score;\n        });\n\n        const json = JSON.stringify(mapped);\n\n        localStorage.setItem(\"buddies\", json);\n    }\n\n}\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"../assets/style/BuddyButton.scoped.scss\";\n\nexport default class BuddyButton extends Component {\n\n    render () {\n        const { text, click } = this.props;\n\n        return (\n            <button onClick={click}>{text}</button>\n        );\n    }\n}\n\nBuddyButton.propTypes = {\n    text: PropTypes.string.isRequired,\n    click: PropTypes.func.isRequired,\n};\n","import React, { Component } from \"react\";\nimport type { Buddy } from \"../types/Buddy\";\nimport PropTypes from \"prop-types\";\nimport BuddyButton from \"./BuddyButton\";\nimport \"../assets/style/BuddyComponent.scoped.scss\";\n\nexport default class BuddyComponent extends Component {\n    render () {\n        const { incrementScore, decrementScore } = this.props;\n\n        const buddy: Buddy = this.props.buddy;\n        const { name, emoteId, score } = buddy;\n        const imgSrc = `https://cdn.discordapp.com/emojis/${emoteId}.png?v=1`;\n\n        return (<div className=\"buddy\">\n            <img src={imgSrc} alt={name} crossOrigin=\"anonymous\"/>\n            <h1>{name}</h1>\n            <h2>Score: {score}</h2>\n            <div className=\"buttons\">\n                <BuddyButton text=\"+\" click={incrementScore}/>\n                <BuddyButton text=\"-\" click={decrementScore}/>\n            </div>\n        </div>);\n    }\n}\n\nBuddyComponent.propTypes = {\n    // buddy: PropTypes.objectOf(BuddyObjectType).isRequired,\n    incrementScore: PropTypes.func.isRequired,\n    decrementScore: PropTypes.func.isRequired,\n};\n","import React, { Component } from \"react\";\nimport ForkRibbon from \"./components/ForkRibbon\";\nimport BuddyStore from \"./BuddyStore\";\nimport BuddyComponent from \"./components/BuddyComponent\";\nimport BuddyButton from \"./components/BuddyButton\";\nimport \"./assets/style/App.scoped.scss\";\n\nexport default class App extends Component {\n    _store;\n\n    constructor (props) {\n        super(props);\n        this._store = new BuddyStore();\n    }\n\n    _incrementScore = (buddy: string) => {\n        this._store.incrementScore(buddy);\n        this.setState({});\n    };\n\n    _decrementScore = (buddy: string) => {\n        this._store.decrementScore(buddy);\n        this.setState({});\n    };\n\n    _resetScores = () => {\n        const conf = window.confirm(\"Hold up buddy\\nThis will reset all your scores, are you sure?\");\n\n        if (conf) {\n            this._store.resetScores();\n            window.location.reload();\n        }\n    };\n\n    render () {\n        const buddies = this._store.buddies;\n\n        return (\n            <div className=\"container\">\n                <ForkRibbon/>\n\n                <div className=\"buddies\">\n                    {buddies.map((buddy) =>\n                        <BuddyComponent\n                            buddy={buddy}\n                            key={buddy.emoteId}\n                            className=\"buddy\"\n                            incrementScore={() => this._incrementScore(buddy.name)}\n                            decrementScore={() => this._decrementScore(buddy.name)}/>)}\n                </div>\n\n                <div className=\"reset\">\n                    <BuddyButton text=\"Reset\" click={this._resetScores}/>\n                </div>\n            </div>\n        );\n    }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n// import * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App/>, document.getElementById(\"app\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}